syntax = "proto3";

service Routes {
    rpc LogMeasurementRoute(stream LogMeasurementRequest) returns (Empty);
    rpc RegisterAntennaRoute(RegisterAntennaRequest) returns (RegisterAntennaResponse);
    rpc GetAntennasRoute(Empty) returns (GetAntennasResponse);
    rpc GetLocationsRoute(GetLocationsRequest) returns (GetLocationsResponse);
    rpc GetLocationMeasurementsRoute(LocationMeasurementsRequest) returns (LocationMeasurementsResponse);
}

/// ***************
/// Log measurement 
/// ***************
message Empty {}

// Logging of measurtement
message LogMeasurementRequest {
    uint32 aid = 1;
    uint64 imsi = 2;
    uint64 timestamp = 3;
    double signal_strength = 4;
}

/// ************************
/// Antenna related messages
/// ************************

// Register antennas
message RegisterAntennaRequest {
    int64 x = 1;
    int64 y = 2;
}

message RegisterAntennaResponse {
    uint32 aid = 1;
}

// Get antennas
message Antenna {
    uint32 aid = 1;
    int64 x = 2;
    int64 y = 3;
}

message GetAntennasResponse {
    repeated Antenna antenna = 1;
}

/// *************************
/// Location related messages
/// *************************

message Location {
    uint64 identifier = 1;
    uint64 calctime = 2;
    int64 x = 3;
    int64 y = 4;
}

enum GetLocationsBy {
    IDENTIFIER = 0;
    INTERVAL = 1;
    N_RECENT = 2;
    ALL = 3;
}

// Location get
message GetLocationsRequest {
    GetLocationsBy method = 1;
    optional uint64 identifier = 2;
    optional uint64 timeinterval = 3;
    optional uint32 n_recent = 4;
}

message GetLocationsResponse {
    repeated Location location = 1;
}

/// ****************************
/// Calculation related messages
/// ****************************

message Measurement {
    uint64 mid = 1;
    uint32 aid = 2;
    uint64 timestamp = 3;
    double signal_strength = 4;
}

message LocationMeasurementsRequest {
    uint64 identifier = 1;
    uint64 calctime = 2;
}

message LocationMeasurementsResponse {
    repeated Measurement measurement = 1;
}